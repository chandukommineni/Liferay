import e,{useState as u,useEffect as g,StrictMode as y}from"react";import{render as S,unmountComponentAtNode as F}from"react-dom";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))c(t);new MutationObserver(t=>{for(const a of t)if(a.type==="childList")for(const r of a.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&c(r)}).observe(document,{childList:!0,subtree:!0});function d(t){const a={};return t.integrity&&(a.integrity=t.integrity),t.referrerPolicy&&(a.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?a.credentials="include":t.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function c(t){if(t.ep)return;t.ep=!0;const a=d(t);fetch(t.href,a)}})();const f=({student:s="",type:o,setShowForm:d,fetchStudents:c})=>{const[t,a]=u({studentName:s.studentName||"",studentEmail:s.studentEmail||"",studentGPA:s.studentGPA||"",studentERP:s.studentERP||""}),r=l=>{const{name:p,value:b}=l.target;a(N=>({...N,[p]:b}))},m=async()=>{try{if(!(await fetch("http://localhost:8081/students",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).ok)throw new Error("Failed to add student");alert("Student added successfully!")}catch(l){console.error("Error adding student:",l),alert("Failed to add student")}c(),n()},i=async()=>{try{if(!(await fetch(`http://localhost:8081/students/${s.studentId}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).ok)throw new Error("Failed to edit student");alert("Student updated successfully!")}catch(l){console.error("Error editing student:",l),alert("Failed to edit student")}c(),n()},E=l=>{l.preventDefault(),o==="add"?m():o==="edit"&&i()},n=()=>{d({edit:!1,add:!1})};return e.createElement("div",{className:"student-form"},e.createElement("h2",{className:"heading-title"},o==="add"?"Add Student":"Edit Student"),e.createElement("form",{onSubmit:E},e.createElement("div",null,e.createElement("label",{className:"form-label"},"Name:"),e.createElement("input",{className:"form-input",type:"text",name:"studentName",value:t.studentName,onChange:r,required:!0})),e.createElement("div",null,e.createElement("label",{className:"form-label"},"Email:"),e.createElement("input",{className:"form-input",type:"email",name:"studentEmail",value:t.studentEmail,onChange:r,required:!0})),e.createElement("div",null,e.createElement("label",{className:"form-label"},"ERP:"),e.createElement("input",{className:"form-input",type:"text",name:"studentERP",value:t.studentERP,onChange:r,required:!0})),e.createElement("div",null,e.createElement("label",{className:"form-label"},"GPA:"),e.createElement("input",{className:"form-input",type:"number",step:"0.1",name:"studentGPA",value:t.studentGPA,onChange:r,required:!0})),e.createElement("button",{className:"button ",type:"submit"},o==="add"?"Add Student":"Edit Student")),e.createElement("button",{className:"button button-back",onClick:n},"Back"))},P=()=>{const[s,o]=u({students:[],loading:!0,error:!1}),[d,c]=u({editForm:!1,addForm:!1}),[t,a]=u({}),r=async()=>{try{const n=await fetch("http://localhost:8081/students");if(!n.ok)throw new Error("Failed to fetch students");const l=await n.json();console.log(l),o({students:l,loading:!1,error:!1})}catch(n){console.error("Error fetching students:",n),o({students:[],loading:!1,error:!0})}},m=n=>{a(n),c({editForm:!0,addForm:!1})},i=()=>{c({editForm:!1,addForm:!0})},E=async n=>{try{if(!(await fetch(`http://localhost:8081/students/${n}`,{method:"DELETE"})).ok)throw new Error("Failed to Delete Student");alert("Student Deleted Successfully"),r()}catch{alert("Failed to Delete Student with ID "+n)}};return g(()=>{r()},[]),e.createElement(e.Fragment,null,d.addForm?e.createElement(f,{type:"add",setShowForm:c,fetchStudents:r}):d.editForm?e.createElement(f,{type:"edit",student:t,setShowForm:c,fetchStudents:r}):e.createElement("div",{className:"student-container"},e.createElement("h2",{className:"heading-title"},"Student Table"),s.loading?e.createElement("p",{className:"loading-text"},"Loading..."):s.error?e.createElement("p",{className:"error-text"},"Error fetching students"):e.createElement("table",{className:"student-table"},e.createElement("thead",{className:"table-header"},e.createElement("tr",null,e.createElement("th",null,"ID"),e.createElement("th",null,"Name"),e.createElement("th",null,"Email"),e.createElement("th",null,"ERP"),e.createElement("th",null,"GPA"),e.createElement("th",null,"Actions"))),e.createElement("tbody",null,s.students.map(n=>e.createElement("tr",{className:"table-row",key:n.studentId},e.createElement("td",{className:"table-cell"},n.studentId),e.createElement("td",{className:"table-cell"},n.studentName),e.createElement("td",{className:"table-cell"},n.studentEmail),e.createElement("td",{className:"table-cell"},n.studentERP),e.createElement("td",{className:"table-cell"},n.studentGPA),e.createElement("td",{className:"table-cell table-button-group"},e.createElement("button",{className:"button button-edit",onClick:()=>m(n)},"Edit"),e.createElement("button",{className:"button button-delete",onClick:()=>E(n.studentId)},"Delete")))))),e.createElement("button",{className:"button",onClick:i},"Add Student")))},w=()=>e.createElement(e.Fragment,null,e.createElement(P,null));class A extends HTMLElement{connectedCallback(){S(e.createElement(y,null,e.createElement(w,null)),this)}disconnectedCallback(){F(this)}}const h="student-custom-element";customElements.get(h)||customElements.define(h,A);
